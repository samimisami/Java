package spring101.teknikServis.entities;

import java.util.ArrayList;
import java.util.List;

import javax.management.relation.Role;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import lombok.Getter;
import lombok.Setter;

@Table(name="systemUsers", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
@Getter
@Setter
@Entity
public class SystemUser {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name="id") //gerek yokmuş, default olarak değişken ismiyle kolon oluşturuluyormuş.
	private Long id;
	
	@Column(name="email")
	private String email;
	
	@Column(name="username")
	private String username;
	
	@Column(name="password")
	private String password;
	
	@ManyToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	@JoinTable(name = "users_roles",
	joinColumns = @JoinColumn(name = "user_id", referencedColumnName = "id"),
	inverseJoinColumns = @JoinColumn(name = "role_id", referencedColumnName = "id"))
	private List<Role> roles = new ArrayList<>();
//	private ArrayList<Role> roles;
//	private Collection<Role> roles; //Neden Collection?
	
	public SystemUser(String email, String username, String password, List<Role> list) {
		super();
		this.email = email;
		this.username = username;
		this.password = password;
		this.roles = list;
	}
	
}
